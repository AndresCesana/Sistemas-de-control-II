%Asignacion de variables y tiempos de integracion 
%x1 es como varia la corriente en el tiempo
%x2 es como varia la tension en el capacitor en el tiempo
%x = A* x(t) + B* x(t)
%y = Ct * x(t)
clc, clear all, close all;
L = 1e-6; 
R = 47; 
C = 100e-9; %Asigno valores  a L,R y C
A=[-R/L, -1/L; 1/C , 0]; 
B=[1/L; 0]; 
Ct= [R, 0]; 
D=0; %Defino matrices con variables de estados
x = [0;0]; 
xop=[0;0]; 
y(1)=0; %Condiciones iniciales nulas
system= ss(A,B,Ct,D); %Creo el modelo de estados a partir de las matrices de estado
FdT=tf(system); % Formo la funcion de transferencia del sistema.
polos_FdT=pole(FdT); %Busco polos para encontrar la dinamica mas rapida y mas lenta de mi FdT, asi puedo elegir mi tiempo de integracion y el tiempo de simulacion
polo1= polos_FdT(1) ;%Dinamica mas rapida
polo2= polos_FdT(2); %Dinamica mas lenta
tr= log(0.95)/polo1;
Ti= tr; % Divido por 10 para tener un tiempo de integracion de Euler adecuado;
delay= 1e5*1e-9; %Retardo incial se puede variar segun necesite 
periodo = 1e-3;
%Vector de tiempos
t0_v = 0:Ti:delay; % Vector de tiempo desde 0v
%ira desde 0 hasta delay con un muestreo de Ti  
t1_v = delay+Ti:Ti:periodo+delay; %varia cada 1ms despues del retardo
% en este caso ira desde el delay hasta el delay + periodo con muestreo Ti
t2_v = t1_v(end)+Ti:Ti:t1_v(end)+periodo;
% en este caso ira desde el final del anterior 
% hasta el final del anterior + periodo con muestreo Ti
t3_v = t2_v(end)+Ti:Ti:t2_v(end)+periodo;
% en este caso ira desde el final del anterior 
% hasta el final del anterior + periodo con muestreo Ti
t4_v = t3_v(end)+Ti:Ti:t3_v(end)+periodo;
% en este caso ira desde el final del anterior 
% hasta el final del anterior + periodo con muestreo Ti
time = [t0_v t1_v t2_v t3_v t4_v]; %Vector para el tiempo, 
% En el siguiente paso multiplico por +/-12 para tener el escalon deseado despues del retardo
%Vector para Escalon:
u1 = zeros(1,length(t0_v)); % Da el delay inicial
u2 = 12*ones(1, length(t1_v)); % Entrada +12V
u3 = -12*ones(1, length(t2_v)); % Entrada -12V
u = [u1 u2 u3 u2 u3]; %Forma un vector variable de +/-12V
%Evolucion del sistema:
Vc = zeros(1, length(time));
I = zeros(1, length(time));
Vc(1)=0; I(1)=0;

for ii = 1:length(time)
    xp= A*(x-xop) + B.*u(ii);
    
    x= x + xp.* Ti;
    y= Ct * x;
    
    I(ii)= x(1);
    Vc(ii)= x(2);
    
end

%Graficos de tensi√≥n corriente y entrada
figure('Position', [17, 0, 1500, 780]); %Para ubicar los graficos en la pantalla
%Entrada
subplot(3,1,1);
plot(time, u);
grid on;
title('Entrada, u(t)');
ylim([-13,13]);
xlim([0,3*periodo]);
ylabel('V[V]');
xlabel('t[ms]');
%Tension del capacitor
subplot(3,1,2);
plot(time, Vc);
grid on;
title('Tension en el Capacitor');
ylim([-13,13]);
xlim([0,3*periodo]);
ylabel('Vc[V]');
xlabel('t[ms]');
%Corriente
subplot(3,1,3);
plot(time, I);
grid on;
title('Corriente');
ylim([-600e-3,600e-3]);
xlim([0,3*periodo]);
ylabel('I[A]');
xlabel('t[ms]');
